const int A1 = -10, B1 = 5;
const char C1 = '8', D1 = '-', D2 = 'A';
int i,j,k, intarray[10];
char op, chararray[11]; 

int add(int A1, int b, int c, int d, char k){
    return (A1+b+c+d+k);
}

char get(){
    int a1 ;
    char A2 ;
    return (chararray[-k+2*k]);
}

int return_3(){
    return (A1);
}

int fib(int n){
    if(n<0){
        return (0);
    }else{
	;
    }

    if(n)
        return (fib(n-1) + fib(n-2));
    else 
        return (1);
}

void testexpr(){
    intarray[0] = 10;
    intarray[1] = 11;
    intarray[2] = fib(k);
    j = 0;
    do{
        printf(intarray[j]);
        j=j+1;
    }while(j<=2);
    j = 0;
    while(j<=2){
        printf(intarray[j]);
        j=j+1;
    }
    for(j = 0;j<=2;j=j+1){
        printf(intarray[j]);
    }
    return;
}

void main(){
    int max;
    int x,y,z;
    char tem;
    max = 10;
    i = 0;
    k = 0;
    z = max;
    chararray[0] = 'h';
    chararray[1] = 'e';
    chararray[+2] = 'l';
    chararray[3] = 'l';
    chararray[4] = 'o';
    chararray[5] = '_';
    chararray[6] = 'w';
    chararray[7] = 'o';
    chararray[8] = 'r';
    chararray[9] = 'l';
    chararray[10] = 'd';
    scanf(x,y,op); 
    tem = get();
    if((tem) != ('_')){
        printf("print string and expr, got char: ",tem);
    } 
    else{
        printf(" !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~");
    }
    testexpr();
    return ;
}