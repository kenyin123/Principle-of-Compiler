CONSTTK const
INTTK int
IDENFR const_int_postive
ASSIGN =
INTCON 1
COMMA ,
IDENFR const_int_zero
ASSIGN =
PLUS +
INTCON 0
COMMA ,
IDENFR const_int_negtive
ASSIGN =
MINU -
INTCON 1
SEMICN ;
CONSTTK const
CHARTK char
IDENFR const_char_a
ASSIGN =
CHARCON a
COMMA ,
IDENFR const_char_b
ASSIGN =
CHARCON b
COMMA ,
IDENFR const_char_c
ASSIGN =
CHARCON c
COMMA ,
IDENFR const_char_A
ASSIGN =
CHARCON A
COMMA ,
IDENFR const_char_num
ASSIGN =
CHARCON 9
COMMA ,
IDENFR const_char_underline
ASSIGN =
CHARCON _
COMMA ,
IDENFR const_char_add
ASSIGN =
CHARCON +
COMMA ,
IDENFR const_char_mul
ASSIGN =
CHARCON *
SEMICN ;
INTTK int
IDENFR int_global_var
SEMICN ;
CHARTK char
IDENFR char_global_var
SEMICN ;
VOIDTK void
IDENFR testIf
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR test_if_1
ASSIGN =
INTCON 1
COMMA ,
IDENFR test_if_2
ASSIGN =
INTCON 2
SEMICN ;
CONSTTK const
CHARTK char
IDENFR const_char_a
ASSIGN =
CHARCON b
COMMA ,
IDENFR const_char_b
ASSIGN =
CHARCON a
SEMICN ;
IFTK if
LPARENT (
IDENFR const_char_a
PLUS +
INTCON 1
GRE >
IDENFR const_char_b
PLUS +
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON b > a
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR const_char_a
PLUS +
INTCON 1
GEQ >=
IDENFR const_char_b
PLUS +
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON b >= a
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR test_if_1
LSS <
IDENFR test_if_2
RPARENT )
PRINTFTK printf
LPARENT (
STRCON 1 < 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR test_if_1
LEQ <=
IDENFR test_if_2
RPARENT )
PRINTFTK printf
LPARENT (
STRCON 1 <= 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR test_if_1
EQL ==
IDENFR test_if_2
RPARENT )
PRINTFTK printf
LPARENT (
STRCON 1 == 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR test_if_1
NEQ !=
IDENFR test_if_2
RPARENT )
PRINTFTK printf
LPARENT (
STRCON 1 != 2
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR test_if_1
MINU -
IDENFR test_if_2
RPARENT )
PRINTFTK printf
LPARENT (
STRCON 1 - 2 = true
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
MINU -
INTCON 1
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON a
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testWhile
LPARENT (
INTTK int
IDENFR loop_length
RPARENT )
LBRACE {
INTTK int
IDENFR test_while_loop
COMMA ,
IDENFR array
LBRACK [
INTCON 50
RBRACK ]
COMMA ,
IDENFR mul
SEMICN ;
IDENFR test_while_loop
ASSIGN =
INTCON 0
SEMICN ;
IDENFR mul
ASSIGN =
INTCON 1
SEMICN ;
WHILETK while
LPARENT (
IDENFR test_while_loop
LSS <
IDENFR loop_length
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON loop value : 
COMMA ,
IDENFR test_while_loop
RPARENT )
SEMICN ;
IDENFR array
LBRACK [
IDENFR test_while_loop
RBRACK ]
ASSIGN =
IDENFR test_while_loop
PLUS +
INTCON 1
SEMICN ;
IDENFR test_while_loop
ASSIGN =
IDENFR test_while_loop
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR test_while_loop
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR test_while_loop
LSS <
IDENFR loop_length
RPARENT )
LBRACE {
IDENFR mul
ASSIGN =
IDENFR mul
MULT *
IDENFR array
LBRACK [
IDENFR test_while_loop
RBRACK ]
SEMICN ;
IDENFR test_while_loop
ASSIGN =
IDENFR test_while_loop
PLUS +
INTCON 1
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON product value : 
COMMA ,
IDENFR mul
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
MINU -
INTCON 2
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON b
SEMICN ;
RBRACE }
INTTK int
IDENFR returnInt
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 10
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR returnChar
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
CHARCON r
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR returnIntParameter
LPARENT (
INTTK int
IDENFR int_parameter
RPARENT )
LBRACE {
INTTK int
IDENFR _tmp
SEMICN ;
IDENFR _tmp
ASSIGN =
IDENFR int_parameter
SEMICN ;
RETURNTK return
LPARENT (
IDENFR _tmp
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR returnCharParameter
LPARENT (
CHARTK char
IDENFR char_parameter
RPARENT )
LBRACE {
CHARTK char
IDENFR _tmp
SEMICN ;
IDENFR _tmp
ASSIGN =
IDENFR char_parameter
SEMICN ;
RETURNTK return
LPARENT (
IDENFR _tmp
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testAssign
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR test_assign_10
ASSIGN =
PLUS +
INTCON 10
SEMICN ;
INTTK int
IDENFR int_test_assign
COMMA ,
IDENFR int_array_test_assign
LBRACK [
INTCON 3
RBRACK ]
SEMICN ;
CHARTK char
IDENFR char_test_assign
COMMA ,
IDENFR char_array_test_assign
LBRACK [
INTCON 3
RBRACK ]
SEMICN ;
IDENFR int_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
MINU -
MINU -
INTCON 2
SEMICN ;
IDENFR int_array_test_assign
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
MINU -
IDENFR returnInt
LPARENT (
RPARENT )
PLUS +
LPARENT (
IDENFR test_assign_10
MULT *
LPARENT (
IDENFR returnChar
LPARENT (
RPARENT )
MINU -
IDENFR const_char_a
RPARENT )
PLUS +
IDENFR returnIntParameter
LPARENT (
LPARENT (
CHARCON a
RPARENT )
RPARENT )
RPARENT )
SEMICN ;
IDENFR int_array_test_assign
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
MINU -
CHARCON b
PLUS +
CHARCON c
SEMICN ;
IDENFR int_test_assign
ASSIGN =
PLUS +
PLUS +
INTCON 10
PLUS +
IDENFR returnIntParameter
LPARENT (
MINU -
PLUS +
INTCON 2
RPARENT )
MULT *
LPARENT (
CHARCON c
MINU -
IDENFR const_char_a
RPARENT )
DIV /
IDENFR int_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR char_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
CHARCON a
SEMICN ;
IDENFR char_array_test_assign
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR returnCharParameter
LPARENT (
IDENFR char_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
IDENFR char_array_test_assign
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR returnChar
LPARENT (
RPARENT )
SEMICN ;
IDENFR char_test_assign
ASSIGN =
IDENFR char_array_test_assign
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_test_assign : 
COMMA ,
IDENFR int_test_assign
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_test_assign : 
COMMA ,
IDENFR char_test_assign
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_test_assign[0] : 
COMMA ,
IDENFR int_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_test_assign[1] : 
COMMA ,
IDENFR int_array_test_assign
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_test_assign[2] : 
COMMA ,
IDENFR int_array_test_assign
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_test_assign[0] : 
COMMA ,
IDENFR char_array_test_assign
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_test_assign[1] : 
COMMA ,
IDENFR char_array_test_assign
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_test_assign[2] : 
COMMA ,
IDENFR char_array_test_assign
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
MINU -
INTCON 4
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON d
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testInputOutput
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR int_test_input
SEMICN ;
CHARTK char
IDENFR char_test_input
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR int_test_input
COMMA ,
IDENFR char_test_input
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR int_test_input
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR char_test_input
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
MINU -
INTCON 5
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON e
SEMICN ;
RBRACE }
INTTK int
IDENFR testRecursion
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
RETURNTK return
LPARENT (
IDENFR n
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
IDENFR n
MULT *
IDENFR testRecursion
LPARENT (
IDENFR n
MINU -
INTCON 1
RPARENT )
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR testRecursion2
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
RBRACE }
VOIDTK void
IDENFR testTrick
LPARENT (
RPARENT )
LBRACE {
LBRACE {
SEMICN ;
LBRACE {
RBRACE }
SEMICN ;
RBRACE }
LBRACE {
LBRACE {
LBRACE {
RBRACE }
RBRACE }
RBRACE }
SEMICN ;
SEMICN ;
SEMICN ;
SEMICN ;
SEMICN ;
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testCallFunction
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR test_recursion_result
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ---------------test if---------------
RPARENT )
SEMICN ;
IDENFR testIf
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_global_var : 
COMMA ,
IDENFR int_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_global_var : 
COMMA ,
IDENFR char_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ---------------test while---------------
RPARENT )
SEMICN ;
IDENFR testWhile
LPARENT (
INTCON 5
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_global_var : 
COMMA ,
IDENFR int_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_global_var : 
COMMA ,
IDENFR char_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ---------------test assign---------------
RPARENT )
SEMICN ;
IDENFR testAssign
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_global_var : 
COMMA ,
IDENFR int_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_global_var : 
COMMA ,
IDENFR char_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ---------------test in out---------------
RPARENT )
SEMICN ;
IDENFR testInputOutput
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_global_var : 
COMMA ,
IDENFR int_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_global_var : 
COMMA ,
IDENFR char_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON ---------------test recursion---------------
RPARENT )
SEMICN ;
IDENFR test_recursion_result
ASSIGN =
IDENFR testRecursion
LPARENT (
INTCON 5
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Factorial result is : 
COMMA ,
IDENFR test_recursion_result
RPARENT )
SEMICN ;
IDENFR test_recursion_result
ASSIGN =
IDENFR testRecursion
LPARENT (
INTCON 8
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Factorial result is : 
COMMA ,
IDENFR test_recursion_result
RPARENT )
SEMICN ;
IDENFR test_recursion_result
ASSIGN =
IDENFR testRecursion2
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Factorial result is : 
COMMA ,
IDENFR test_recursion_result
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
MINU -
INTCON 6
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON f
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR int_global_var
SEMICN ;
CHARTK char
IDENFR char_global_var
SEMICN ;
IDENFR testCallFunction
LPARENT (
RPARENT )
SEMICN ;
IDENFR testTrick
LPARENT (
RPARENT )
SEMICN ;
IDENFR int_global_var
ASSIGN =
INTCON 0
SEMICN ;
IDENFR char_global_var
ASSIGN =
CHARCON _
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON int_global_var : 
COMMA ,
IDENFR int_global_var
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON char_global_var : 
COMMA ,
IDENFR char_global_var
RPARENT )
SEMICN ;
RBRACE }